{"version":3,"sources":["context/index.js","request/index.js","components/Header/TimeRangePicker/index.js","components/Header/Qualifier/index.js","constants.js","components/Header/index.js","components/LineChart/Calls/index.js","components/LineChart/Chart/StateProportion.js","utils/handlerChartData.js","components/LineChart/Chart/TotalCalls.js","components/LineChart/Chart/LineChart.js","components/LineChart/Chart/QualifierDestination.js","components/LineChart/index.js","App.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","config","setConfig","Provider","value","children","Consumer","axios","require","timer","getMetricData","params","a","get","result","statusText","data","error","Message","metric","toString","getVersion","message","getAlias","getConfigFlag","forwardRef","ref","lable","qualifier","setQualifier","visible","setVisible","listVersions","setListVersions","listAlias","setListAlias","versions","unshift","versionId","aliases","selectChange","qualifierValue","useEffect","getQualifier","getConfig","useImperativeHandle","label","onVisibleChange","style","width","display","className","popupContent","size","Item","key","title","map","onClick","aliasName","RangePicker","DatePicker","defaultRecentList","pecentPeriodObject","hours","days","weeks","getPeriod","difference","recent","setRecent","moment","endTime","setEndValue","subtract","startTime","setStartValue","period","setPeriod","clearInterval","setInterval","recentChange","onRangeOk","dateValues","duration","asHours","warning","valueOf","onChange","onOk","disabledDate","date","format","showTime","dataSource","debounce","text","type","LEGENDNAMELIST","FORMAT","Row","Grid","Col","CustomIcon","Icon","createFromIconfontCN","scriptUrl","useContext","timeRangePickerRef","useRef","qualifierRef","current","totalCalls","resourcesData","errors","totalCallsNum","totalCallsUnit","resourcesNum","allErrorsNum","allErrorsUnit","forEach","Value","Math","floor","Object","keys","gutter","keepDecimal","succNum","FunctionClientErrors","FunctionServerErrors","FunctionTotalInvocations","loading","serversNum","clientNum","dv","item","count","percent","height","scale","formatter","val","placeholder","autoFit","radius","showTitle","position","adjust","color","lineWidth","stroke","content","animate","completionParams","lastTs","currentTs","minTime","currentTime","60","add","300","3600","showUnit","conf","setData","resultPromissList","metricNameList","values","initMetricNameData","legendName","itemValues","index","timestamp","lastItem","length","chartData","per","push","handlerData","console","log","d","DataSet","createView","source","transform","fields","order","callback","row","retains","padding","rows","name","tickLine","shape","k","marker","area","titleNode","tooltip","FunctionQualifierDestinationErrors","FunctionQualifierDestinationSuccessed","_","merge","dv1","destinationSucceeded","destinationErrors","setTotalCalls","setResourcesData","errorsAndTotalLoading","setErrorsAndTotalLoading","errorsAndTotal","setErrorsAndTotal","FunctionFunctionErrors","setErrors","memoryUsageLoading","setFunctionMaxMemoryUsageLoading","memoryUsage","setFunctionMaxMemoryUsage","avgDurationLoading","setFunctionAvgDurationLoading","avgDuration","setFunctionAvgDuration","qualifierDestinationLoading","setQualifierDestinationLoading","qualifierDestination","setQualifierDestination","asyncExpiredDroppedLoading","setFunctionQualifierAsyncEventExpiredDroppedLoading","asyncExpiredDropped","setFunctionQualifierAsyncEventExpiredDropped","functionTotalInvocations","functionOnDemandUsage","functionClientErrors","functionServerErrors","functionFunctionErrors","functionMaxMemoryUsage","functionAvgDuration","Project","functionQualifierDestinationSuccessed","functionQualifierDestinationErrors","functionQualifierAsyncEventExpiredDropped","asyncEventExpiredDropped","isEmpty","getData","span","TotalCalls","StateProportion","LineChart","QualifierDestination","Content","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.be31f3e4.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\n\n// 1. 使用 createContext 创建上下文\nexport const UserContext = new createContext()\n\n// 2. 创建 Provider\nexport const UserProvider = props => {\n    let [config, setConfig] = useState({})\n\n    return (\n      <UserContext.Provider value={{ config, setConfig }}>\n        {props.children}\n      </UserContext.Provider>\n    )\n}\n\n// 3. 创建 Consumer\nexport const UseConsumer = UserContext.Consumer","import { Message } from '@alicloud/console-components'\nconst axios = require('axios');\n\n// const uri = '//localhost:3000';\nconst uri = '';\n\nfunction wait(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n\nconst getMetricData = async (params) => {\n  try {\n    const result = await axios.get(`${uri}/get/metric`, { params });\n    if (result.statusText === 'OK' && !result.data.error) {\n      return result.data;\n    }\n    Message.error(`Metric ${params.metric} 请求失败。`);\n    return [];\n  } catch (e) {\n    Message.error(`Metric ${params.metric} 请求失败: `, e.toString());\n    return [];\n  }\n  // await wait(500);\n  // return metricDatas[params.metric] || [];\n}\n\nconst getVersion = async () => {\n  const result = await axios.get(`${uri}/get/version`);\n  if (result.statusText === 'OK' && !result.data.error) {\n    return result.data;\n  }\n  Message.error(result.data.message);\n  return []\n}\n\nconst getAlias = async () => {\n  const result = await axios.get(`${uri}/get/alias`);\n  if (result.statusText === 'OK' && !result.data.error) {\n    return result.data;\n  }\n  Message.error(result.data.message);\n  return []\n}\n\nexport {\n  getMetricData, getVersion, getAlias\n}\n","import React, { Fragment, useState, forwardRef, useImperativeHandle, useEffect } from 'react';\nimport { DatePicker, Select, Message, Icon, Button } from '@alicloud/console-components';\nimport moment from 'moment';\nimport debounce from 'lodash/debounce'\n\nimport './index.css';\n\nconst { RangePicker } = DatePicker;\nconst defaultRecentList = [\n  { label: '实时', value: 'hours' },\n  { label: '24 小时', value: 'days' },\n  { label: '1 周', value: 'weeks' },\n  { label: '自定义', value: 'customize' },\n];\nconst pecentPeriodObject = {\n  hours: 60,\n  days: 3600,\n  weeks: 3600,\n  getPeriod: (difference) => {\n    if(difference <= 12) {\n      return 60;\n    }\n    return 3600;\n  },\n};\n\nlet getConfigFlag = false; // 是否获取数据\nlet timer;\n\nexport default forwardRef((props, ref) => {\n  const [recent, setRecent] = useState('hours')\n  const [endTime, setEndValue] = useState(moment());\n  const [startTime, setStartValue] = useState(moment().subtract(1, 'hours'));\n  const [period, setPeriod] = useState(60);\n\n  useEffect(() => {\n    if (getConfigFlag) {\n      props.getConfig();\n      getConfigFlag = false;\n    }\n    clearInterval(timer);\n    if (recent === 'hours') {\n      timer = setInterval(() => recentChange(recent), 30 * 1000);\n    }\n  }, [period, endTime, startTime, recent])\n\n  const onRangeOk = async (dateValues) => {\n    const startTime = moment(dateValues[0]);\n    const endTime = moment(dateValues[1]);\n    const difference = moment.duration(endTime - startTime, 'ms').asHours();\n    if (difference === 0) {\n      return Message.warning('开始时间必须小于结束时间');\n    }\n    const period = pecentPeriodObject.getPeriod(difference);\n    setRecent('customize');\n    setStartValue(dateValues[0]);\n    setEndValue(dateValues[1]);\n    setPeriod(period);\n    getConfigFlag = true;\n  }\n  const recentChange = (value) => {\n    if(value === 'customize') {\n      setRecent('customize');\n      return;\n    }\n    getConfigFlag = true;\n    const endTime = moment();\n    const period = pecentPeriodObject[value];\n    const startTime = moment().subtract(1, value);\n    setRecent(value);\n    setEndValue(endTime);\n    setStartValue(startTime);\n    setPeriod(period);\n  }\n  const refreshTime = () => {\n    getConfigFlag = true;\n    if(recent === 'customize') {\n      return;\n    }\n    recentChange(recent);\n  }\n\n  useImperativeHandle(ref, () => ({\n    endTime: moment(endTime).valueOf(),\n    startTime: moment(startTime).valueOf(),\n    // endTime: 1602212937315,\n    // startTime: 1602209337316,\n    period\n  }))\n\n  return (\n    <Fragment>\n      <RangePicker\n        label=\"时间范围\"\n        value={[startTime, endTime]}\n        onChange={(dateValues) => {\n          if (dateValues[0]) {\n            setStartValue(dateValues[0]);\n          }\n          if (dateValues[1]) {\n            setEndValue(dateValues[1]);\n          }\n        }}\n        onOk={onRangeOk}\n        disabledDate={(date) => date.valueOf() > moment() || date.valueOf() < moment().subtract(1, 'months')}\n        className=\"marginLeft\"\n        style={{ width: 465 }}\n        format=\"YYYY年MM月DD日\"\n        showTime={{ format: 'HH:mm' }}\n      />\n      <Select\n        label={recent !== 'customize' && '最近'}\n        value={recent}\n        dataSource={defaultRecentList}\n        className=\"marginLeft\"\n        onChange={recentChange}\n      />\n      <Button\n        onClick={debounce(refreshTime, 200)}\n        className=\"marginLeft\"\n        text\n      ><Icon type=\"refresh\" /></Button>\n    </Fragment>\n  )\n});","import React, { Fragment, useState, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport { Tab, Select } from '@alicloud/console-components';\nimport { getVersion, getAlias } from '../../../request'\nimport './index.css';\n\nlet getConfigFlag = false; // 是否获取数据\n\nexport default forwardRef((props, ref) => {\n  const [qualifier, setQualifier] = useState({ lable: 'LATEST', value: 'LATEST' });\n  const [visible, setVisible] = useState(false);\n  const [listVersions, setListVersions] = useState([]);\n  const [listAlias, setListAlias] = useState([]);\n\n  useEffect(() => {\n    if (visible) {\n      getQualifier();\n    }\n    if (getConfigFlag) {\n      props.getConfig();\n      getConfigFlag = false;\n    }\n  }, [visible]);\n\n  // 获取版本别名列表\n  async function getQualifier() {\n    const versions = await getVersion();\n    versions.unshift({ versionId: 'LATEST' });\n    setListVersions(versions);\n\n    const aliases = await getAlias();\n    setListAlias(aliases);\n  }\n\n  function selectChange(qualifierValue) {\n    setQualifier({ lable: qualifierValue, value: qualifierValue });\n    setVisible(false);\n    getConfigFlag = true;\n  }\n\n  useImperativeHandle(ref, () => ({ qualifier: qualifier.value }));\n\n  return (\n    <Fragment>\n      <Select\n        label=\"版本/别名\"\n        value={qualifier}\n        visible={visible}\n        onVisibleChange={setVisible}\n        style={{ width: 200, display: 'none' }}\n        className=\"marginLeft\"\n        popupContent={(\n          <Tab\n            className=\"qualifier-dropdownTab\"\n            size=\"small\"\n          >\n            <Tab.Item key=\"version\" title={<span>版本</span>}>\n              <div className=\"dropdownTabItem\">\n                {listVersions.map(({ versionId }) => <p key={versionId} onClick={() => selectChange(versionId)}>{versionId}</p>)}\n              </div>\n            </Tab.Item>\n            <Tab.Item key=\"alias\" title={<span>别名</span>}>\n              <div className=\"dropdownTabItem\">\n                {listAlias.map(({ aliasName }) => <p key={aliasName} title={aliasName} onClick={() => selectChange(aliasName)}>{aliasName}</p>)}\n              </div>\n            </Tab.Item>\n          </Tab>\n        )}\n      />\n    </Fragment>\n  );\n});","export const ICONURL = '//at.alicdn.com/t/font_2122597_dz0rabr6g8i.js';\n\nexport const LEGENDNAMELIST = [\n  '总调用次数',\n  '服务端错误',\n  '客户端错误'\n];\n\nexport const FORMAT = 'YYYY-MM-DD HH:mm:00';","import React, { useRef, useEffect, useContext } from 'react';\nimport { Grid, Icon } from '@alicloud/console-components';\n\nimport { UserContext } from '../../context';\nimport Qualifier from './Qualifier';\nimport TimeRangePicker from './TimeRangePicker';\nimport { ICONURL } from '../../constants'\nimport './index.css';\n\nconst { Row, Col } = Grid;\n\nconst CustomIcon = Icon.createFromIconfontCN({\n  scriptUrl: ICONURL,\n});\n\nexport default () => {\n  const { setConfig } = useContext(UserContext)\n  const timeRangePickerRef = useRef(null);\n  const qualifierRef = useRef(null);\n\n  useEffect(() => {\n    getConfig()\n  }, [])\n\n  const getConfig = () => {\n    const { endTime, startTime, period } = timeRangePickerRef.current;\n    const { qualifier } = qualifierRef.current;\n    setConfig({ endTime, startTime, period, qualifier });\n  }\n\n  return (\n    <Row className=\"header\">\n      <Col className=\"header-logo-box\">\n        <CustomIcon type=\"icon-aliyun\" className=\"header-logo\" />\n        <span className=\"header-title\">Function Metrics</span>\n      </Col>\n      \n      <Qualifier\n        ref={qualifierRef}\n        getConfig={getConfig}\n      />\n      <TimeRangePicker\n        ref={timeRangePickerRef}\n        getConfig={getConfig}\n      />\n    </Row>\n  )\n}","import React from 'react';\nimport { Grid } from '@alicloud/console-components';\nimport './index.css'\nconst { Row, Col } = Grid;\n\nexport default (props) => {\n  const { totalCalls, resourcesData, errors } = props;\n  let totalCallsNum = 0;\n  let totalCallsUnit = '次';\n  let resourcesNum = 0;\n  let allErrorsNum = 0;\n  let allErrorsUnit = '次';\n\n  totalCalls.forEach(({ Value }) => totalCallsNum += Value);\n  if (totalCallsNum > 10000) {\n    totalCallsUnit = '万次';\n    totalCallsNum = Math.floor(totalCallsNum / 100) / 100\n  }\n\n  resourcesData.forEach(({ Value }) => resourcesNum += Value);\n  resourcesNum = resourcesNum / (10 * 1024);\n\n  Object.keys(errors).forEach(metric => errors[metric].forEach(({ Value }) => allErrorsNum += Value ))\n  if (allErrorsNum > 10000) {\n    allErrorsUnit = '万次';\n    allErrorsNum = Math.floor(allErrorsNum / 100) / 100\n  }\n\n  return (\n    <Row className=\"lineChart marginBottom\" gutter={16}>\n      <Col>\n        <div className=\"border\">\n          <div className=\"chart1\">\n            <span>调用总次数</span>\n            <span>{totalCallsNum}</span>\n            <span>{totalCallsUnit}</span>\n          </div>\n          <div className=\"tip\">统计时间范围内，调用总次数</div>\n        </div>\n      </Col>\n\n      <Col>\n        <div className=\"border\">\n          <div className=\"chart1\">\n            <span>资源使用量</span>\n            <span>{Math.floor(resourcesNum * 1000) / 1000}</span>\n            <span>cus</span>\n          </div>\n          <div className=\"tip\">统计时间范围内，有效调用次数资源量（不包括预留等）</div>\n        </div>\n      </Col>\n\n      <Col>\n        <div className=\"border\">\n          <div className=\"chart1\">\n            <span>错误总次数</span>\n            <span>{allErrorsNum}</span>\n            <span>{allErrorsUnit}</span>\n          </div>\n          <div className=\"tip\">统计时间范围内，失败总次数</div>\n        </div>\n      </Col>\n    </Row>\n    \n  )\n}","import React from 'react';\nimport {\n  Chart,\n  Interval,\n  Tooltip,\n  Axis,\n  Coordinate,\n  Interaction\n} from 'bizcharts';\nimport { Loading } from '@alicloud/console-components';\n\nconst keepDecimal = value => Math.floor(value * 100) / 100;\n\nexport default ({\n  FunctionClientErrors,\n  FunctionServerErrors,\n  FunctionTotalInvocations,\n  loading\n}) => {\n  const cols = {\n    percent: {\n      formatter: val => {\n        val = val * 100 + '%';\n        return val;\n      },\n    },\n  };\n\n  let totalCallsNum = 0;\n  let serversNum = 0;\n  let clientNum = 0;\n  let succNum = 0;\n  FunctionTotalInvocations.forEach(({ Value }) => totalCallsNum += Value);\n  FunctionServerErrors.forEach(({ Value }) => serversNum += Value);\n  FunctionClientErrors.forEach(({ Value }) => clientNum += Value);\n  succNum = totalCallsNum - serversNum - clientNum;\n\n  const dv = totalCallsNum ? [\n    { item: '成功调用', count: succNum, percent: keepDecimal(succNum / totalCallsNum) },\n    { item: '客户端错误', count: clientNum, percent: keepDecimal(clientNum / totalCallsNum) },\n    { item: '服务端错误', count: serversNum, percent: keepDecimal(serversNum / totalCallsNum) }\n  ] : [];\n\n  return (\n    <div className=\"stateProportion border\">\n      <div className=\"chartTitle\">状态比例</div>\n      <Loading visible={loading} style={{ display: 'block' }}>\n      <Chart\n        height={230}\n        data={dv}\n        scale={cols}\n        placeholder={<div className=\"chartPlaceholder\">暂无数据</div>}\n        autoFit\n      >\n        <Coordinate type=\"theta\" radius={0.75} />\n        <Tooltip showTitle={false} />\n        <Axis visible={false} />\n        <Interval\n          position=\"percent\"\n          adjust=\"stack\"\n          color=\"item\"\n          style={{\n            lineWidth: 1,\n            stroke: '#fff',\n          }}\n          label={['count', {\n            content: (data) => {\n              return `${data.item}: ${data.percent * 100}%`;\n            },\n          }]}\n          animate={false}\n        />\n        <Interaction type='element-single-selected' />\n      </Chart>\n      </Loading>\n    </div>\n  )\n}","const moment = require('moment');\n\nconst keepDecimal = value => Math.floor(value * 100) / 100;\n\n// 云监控处理时间的前置数据\nfunction completionParams({ startTime, period, endTime }, lastTs) {\n  // 取最终时间 max(lastTs/所有点的最大值, min(currentTs - 5min/当前时间之前 5 分钟, rangeMaxTs/选择的时间))\n  // 时间间隔 60 分钟\n  const currentTs = moment().subtract(60, 'minute').valueOf();\n  const minTime = currentTs < endTime ? currentTs : endTime;\n\n  const t = {\n    60: moment(moment(startTime).format('YYYY-MM-DD HH:mm:00')).add(1, 'minutes').valueOf(),\n    300: moment(moment(startTime).format('YYYY-MM-DD HH:mm:00')).add(5, 'minutes').valueOf(),\n    3600: moment(moment(startTime).format('YYYY-MM-DD HH:00:00')).add(1, 'hours').valueOf(),\n  }\n\n  return {\n    currentTime: t[period],\n    showUnit: `${period} 秒`,\n    endTime: lastTs > minTime ? lastTs : minTime,\n  }\n}\n\nexport function handlerData(resultPromissList = [], metricNameList = [], params) {\n\n  for (const item of resultPromissList) {\n    if (!item) {\n      return [];\n    }\n  }\n  const data = resultPromissList;\n\n  const values = {};\n  let lastTs = 0;\n  const initMetricNameData = {};\n  metricNameList.forEach(legendName => initMetricNameData[legendName] = 0);\n\n  data.forEach((itemValues, index) => {\n    const legendName = metricNameList[index];\n    if (index === 0) {\n      itemValues.forEach(item => {\n        values[item.timestamp] = {\n          timestamp: item.timestamp,\n          ...initMetricNameData,\n          [legendName]: keepDecimal(item.Value)\n        };\n      })\n    } else {\n      itemValues.forEach(item => {\n        if (values[item.timestamp]) {\n          values[item.timestamp][legendName] = keepDecimal(item.Value);\n        } else {\n          values[item.timestamp] = { timestamp: item.timestamp, ...initMetricNameData, [legendName]: keepDecimal(item.Value) };\n        }\n      })\n    }\n    const lastItem = itemValues[itemValues.length - 1] || {};\n    lastTs = lastTs >= lastItem.timestamp ? lastTs : lastItem.timestamp;\n  });\n  const chartData = [];\n  const { period } = params;\n  const per = period * 1000;\n  let { currentTime, endTime } = completionParams(params, lastTs);\n  for (; currentTime <= endTime; currentTime += per) {\n    const item = values[currentTime] || initMetricNameData;\n    chartData.push({ timestamp: currentTime, ...item, });\n    delete values[currentTime];\n  }\n  return chartData;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Chart,\n  Axis,\n  LineAdvance\n} from 'bizcharts';\nimport DataSet from \"@antv/data-set\";\nimport { Loading } from '@alicloud/console-components';\nimport { LEGENDNAMELIST, FORMAT } from '../../../constants';\nimport { handlerData } from '../../../utils/handlerChartData';\nconst moment = require('moment');\n\nexport default ({\n  FunctionClientErrors,\n  FunctionServerErrors,\n  FunctionTotalInvocations,\n  loading,\n  conf\n}) => {\n  const [dv, setData] = useState([]);\n\n  useEffect(() => {\n    const data = handlerData(\n      [FunctionTotalInvocations, FunctionServerErrors, FunctionClientErrors],\n      LEGENDNAMELIST,\n      conf,\n    );\n    console.log(FunctionTotalInvocations, data);\n\n    const ds = new DataSet();\n    const d = ds.createView().source(data);\n    d.transform({\n      type: \"pick\",\n      fields: [...LEGENDNAMELIST, 'timestamp']\n    })\n      .transform({\n        type: 'sort-by',\n        fields: ['timestamp'],\n        order: 'ASC'\n      })\n      .transform({\n        type: 'map',\n        callback(row) {\n          row.timestamp = `${moment(row.timestamp).format(FORMAT)} - 粒度: ${conf.period} 秒`;\n          return row;\n        }\n      })\n      .transform({\n        type: 'fold',\n        fields: [...LEGENDNAMELIST],\n        retains: ['timestamp']\n      })\n    setData(d);\n  }, [FunctionTotalInvocations, FunctionServerErrors, FunctionClientErrors, conf]);\n\n\n  const showColors = (k) => {\n    if (k === '客户端错误') {\n      return '#F8DE8E'\n    }\n    if (k === '服务端错误') {\n      return '#F5B59C'\n    }\n    return '#82A9DC'\n  };\n\n  return (\n    <div className=\"totalBox border\">\n      <div className=\"chartTitle\">总调用次数</div>\n      <Loading visible={loading} style={{ display: 'block' }}>\n      <Chart\n        padding=\"auto\"\n        autoFit\n        loading={loading}\n        height={235}\n        placeholder={<div className=\"chartPlaceholder\">暂无数据</div>}\n        data={dv.rows}\n      >\n        <Axis name=\"timestamp\" label={{ formatter: () => '' }} tickLine={null} />\n        <LineAdvance\n          shape=\"smooth\"\n          position=\"timestamp*value\"\n          color={[\"key\", showColors]}\n          marker=\"square\"\n          area\n        />\n      </Chart>\n      </Loading>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { Chart, Legend, Axis, Geom } from 'bizcharts';\nimport { Loading } from '@alicloud/console-components';\n\nimport { FORMAT } from '../../../constants'\nconst moment = require('moment');\n\nexport default ({ data, titleNode, loading }) => {\n  const [dv, setData] = useState([]);\n\n  useEffect(() => {\n    setData(data.map(item => ({\n      ...item,\n      timestamp: moment(item.timestamp).format(FORMAT)\n    })))\n  }, [data])\n\n  return (\n    <div className=\"lineChartBox border\">\n      {titleNode}\n      <Loading visible={loading} style={{ display: 'block' }}>\n      <Chart\n        padding=\"auto\"\n        autoFit\n        height={230}\n        placeholder={<div className=\"chartPlaceholder\">暂无数据</div>}\n        data={dv}\n      >\n        <Axis\n          name=\"timestamp\"\n          label={{ formatter: () => '' }}\n          tickLine={null}\n        />\n        <Legend />\n        <Geom\n          type=\"line\"\n          position=\"timestamp*Value\"\n          shape=\"smooth\"\n          tooltip={['timestamp*Value', (timestamp, Value)=>{\n            return {\n              title: timestamp,\n              name: 'Value',\n              value: Value\n            }\n          }]}\n        />\n      </Chart>\n      </Loading>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Chart, Legend, Axis, Geom } from 'bizcharts';\nimport DataSet from \"@antv/data-set\";\nimport { Loading } from '@alicloud/console-components';\nimport _ from 'lodash';\n\nimport { FORMAT } from '../../../constants';\nconst moment = require('moment');\n\nexport default ({ data, loading, titleNode }) => {\n  const [dv, setData] = useState([]);\n\n  useEffect(() => {\n    const { FunctionQualifierDestinationErrors, FunctionQualifierDestinationSuccessed } = data;\n    const d = _.merge(FunctionQualifierDestinationErrors, FunctionQualifierDestinationSuccessed);\n    const ds = new DataSet();\n    const dv1 = ds.createView().source(d);\n    dv1.transform({\n      type: \"pick\",\n      fields: ['destinationErrors', 'destinationSucceeded', 'timestamp']\n    })\n      .transform({\n        type: 'map',\n        callback(row) {\n          return {\n            timestamp: moment(row.timestamp).format(FORMAT),\n            '成功次数': row.destinationSucceeded,\n            '失败次数': row.destinationErrors\n          };\n        }\n      })\n      .transform({\n        type: 'fold',\n        fields: ['成功次数', '失败次数'],\n        retains: ['timestamp']\n      })\n    setData(dv1)\n  }, [data])\n\n  return (\n    <div className=\"lineChartBox border\">\n      {titleNode}\n      <Loading visible={loading} style={{ display: 'block' }}>\n      <Chart\n        padding=\"auto\"\n        autoFit\n        height={230}\n        placeholder={<div className=\"chartPlaceholder\">暂无数据</div>}\n        data={dv.rows}\n      >\n        <Axis\n          name=\"timestamp\"\n          label={{ formatter: () => '' }}\n          tickLine={null}\n        />\n        <Legend />\n        <Geom\n          type=\"line-advance\"\n          position=\"timestamp*value\"\n          shape=\"smooth\"\n          color=\"key\"\n          tooltip={['timestamp*value*key', (timestamp, value, key)=>{\n            return {\n              title: timestamp,\n              name: key,\n              value\n            }\n          }]}\n        />\n      </Chart>\n      </Loading>\n    </div>\n  );\n}","import React, { useState, useEffect, Fragment, useContext } from 'react';\nimport { isEmpty } from 'lodash';\nimport { Grid } from '@alicloud/console-components';\n\nimport { UserContext } from '../../context'\nimport Calls from './Calls';\nimport { TotalCalls, StateProportion, LineChart, QualifierDestination } from './Chart';\nimport { getMetricData } from '../../request';\nimport './index.css'\nconst { Row, Col } = Grid;\n\nexport default () => {\n  const { config } = useContext(UserContext); \n  const [totalCalls, setTotalCalls] = useState([]);\n  const [resourcesData, setResourcesData] = useState([]);\n\n  const [errorsAndTotalLoading, setErrorsAndTotalLoading] = useState(false);\n  const [errorsAndTotal, setErrorsAndTotal] = useState({\n    FunctionClientErrors: [],\n    FunctionServerErrors: [],\n    FunctionTotalInvocations: [],\n  });\n  const [errors, setErrors] = useState({\n    FunctionClientErrors: [],\n    FunctionServerErrors: [],\n    FunctionFunctionErrors: [],\n  });\n  const [memoryUsageLoading, setFunctionMaxMemoryUsageLoading] = useState(false);\n  const [memoryUsage, setFunctionMaxMemoryUsage] = useState([]);\n  const [avgDurationLoading, setFunctionAvgDurationLoading] = useState(false);\n  const [avgDuration, setFunctionAvgDuration] = useState([]);\n  const [qualifierDestinationLoading, setQualifierDestinationLoading] = useState(false);\n  const [qualifierDestination, setQualifierDestination] = useState({\n    FunctionQualifierDestinationSuccessed: [],\n    FunctionQualifierDestinationErrors: []\n  })\n  const [asyncExpiredDroppedLoading, setFunctionQualifierAsyncEventExpiredDroppedLoading] = useState(false);\n  const [asyncExpiredDropped, setFunctionQualifierAsyncEventExpiredDropped] = useState([]);\n\n\n  async function getData() {\n    // 总数\n    const functionTotalInvocations = await getMetricData({ ...config, metric: 'FunctionTotalInvocations' });\n    setTotalCalls(functionTotalInvocations);\n    // 资源使用计算\n    const functionOnDemandUsage = await getMetricData({ ...config, metric: 'FunctionOnDemandUsage' });\n    setResourcesData(functionOnDemandUsage);\n    // 获取错误指标\n    const functionClientErrors = await getMetricData({ ...config, metric: 'FunctionClientErrors' });\n    const functionServerErrors = await getMetricData({ ...config, metric: 'FunctionServerErrors' });\n    setErrorsAndTotal({\n      FunctionClientErrors: functionClientErrors,\n      FunctionServerErrors: functionServerErrors,\n      FunctionTotalInvocations: functionTotalInvocations,\n    });\n    setErrorsAndTotalLoading(false);\n    const functionFunctionErrors = await getMetricData({ ...config, metric: 'FunctionFunctionErrors' });\n    setErrors({\n      FunctionClientErrors: functionClientErrors,\n      FunctionServerErrors: functionServerErrors,\n      FunctionFunctionErrors: functionFunctionErrors,\n    });\n    // 内存\n    const functionMaxMemoryUsage = await getMetricData({ ...config, metric: 'FunctionMaxMemoryUsage' });\n    setFunctionMaxMemoryUsage(functionMaxMemoryUsage);\n    setFunctionMaxMemoryUsageLoading(false);\n    // 执行时间\n    const functionAvgDuration = await getMetricData({ ...config, metric: 'FunctionAvgDuration' });\n    setFunctionAvgDuration(functionAvgDuration);\n    setFunctionAvgDurationLoading(false);\n    // 异步调用目标发送指标\n    const functionQualifierDestinationSuccessed = await getMetricData({ ...config, metric: 'FunctionQualifierDestinationSuccessed', Project: 'aliyun_fc' });\n    const functionQualifierDestinationErrors = await getMetricData({ ...config, metric: 'FunctionQualifierDestinationErrors', Project: 'aliyun_fc' });\n    setQualifierDestination({\n      FunctionQualifierDestinationSuccessed: functionQualifierDestinationSuccessed,\n      FunctionQualifierDestinationErrors: functionQualifierDestinationErrors\n    });\n    setQualifierDestinationLoading(false);\n    // 异步消息超时丢弃\n    const functionQualifierAsyncEventExpiredDropped = await getMetricData({ ...config, metric: 'FunctionQualifierAsyncEventExpiredDropped', Project: 'aliyun_fc' });\n    setFunctionQualifierAsyncEventExpiredDropped(functionQualifierAsyncEventExpiredDropped.map(({ timestamp, asyncEventExpiredDropped }) => ({ timestamp, Value: asyncEventExpiredDropped })));\n    setFunctionQualifierAsyncEventExpiredDroppedLoading(false);\n  }\n\n  useEffect(() => {\n    if (!isEmpty(config)) {\n      setErrorsAndTotalLoading(true);\n      setFunctionMaxMemoryUsageLoading(true);\n      setFunctionAvgDurationLoading(true);\n      setQualifierDestinationLoading(true);\n      setFunctionQualifierAsyncEventExpiredDroppedLoading(true);\n      getData();\n    }\n  }, [config]);\n\n  return (\n    <Fragment>\n      <Calls\n        totalCalls={totalCalls}\n        resourcesData={resourcesData}\n        errors={errors}\n      />\n      <Row className=\"marginBottom\">\n        <Col span={16}>\n          <TotalCalls\n            {...errorsAndTotal}\n            loading={errorsAndTotalLoading}\n            conf={{ ...config }}\n          />\n        </Col>\n        <Col span={8}>\n          <StateProportion\n            {...errorsAndTotal}\n            loading={errorsAndTotalLoading}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={6}>\n          <LineChart\n            data={memoryUsage}\n            loading={memoryUsageLoading}\n            titleNode={<div className=\"chartTitle\">内存使用（MB）</div>}\n          />\n        </Col>\n        <Col span={6}>\n          <LineChart\n            data={avgDuration}\n            loading={avgDurationLoading}\n            titleNode={<div className=\"chartTitle\">时间消耗（ms）</div>}\n          />\n        </Col>\n        <Col span={6}>\n          <QualifierDestination\n            data={qualifierDestination}\n            loading={qualifierDestinationLoading}\n            titleNode={<div className=\"chartTitle\">异步调用目标发送指标（次）</div>}\n          />\n        </Col>\n        <Col span={6} className=\"lastLineChartBoxParent\">\n          <LineChart\n            data={asyncExpiredDropped}\n            loading={asyncExpiredDroppedLoading}\n            titleNode={<div className=\"chartTitle\">异步消息超时丢弃（次）</div>}\n          />\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}","import React from 'react';\nimport Page from '@alicloud/console-components-page';\nimport Header from './components/Header'\nimport LineChart from './components/LineChart'\n\nimport { UserProvider } from './context'\n\nexport default () => {\n\n  return (\n    <UserProvider>\n      <Page>\n        <Page.Content>\n          <Header />\n          <LineChart />\n        </Page.Content>\n      </Page>\n    </UserProvider>\n  )\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nimport './index.css';\nimport '@alicloud/console-components/dist/wind.css';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}